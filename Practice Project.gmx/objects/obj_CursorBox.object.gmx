<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_CursorBox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xgrid_size = 64
ygrid_size = 64
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = median(view_xview[0] + 1, mouse_x, view_xview[0] + view_wview[0]);
//y = median(view_yview[0] + 1, mouse_y, view_yview[0] + view_hview[0]);

x = mouse_x;
y = mouse_y;
if global.select!="lumbermill"
{
  x = (x div xgrid_size)*xgrid_size;
  y = (y div ygrid_size)*ygrid_size;
  sprite_index = spr_CursorBox;
}
if global.select="lumbermill" || distance_to_object(obj_lumbermill)==0
{
    x = (x div (xgrid_size*2))*(xgrid_size*2);
    y = (y div (ygrid_size*2))*(ygrid_size*2);
    sprite_index = spr_CursorBox_big;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Check if the cell at block cursor position is free
if global.select!="lumbermill"
{
if global.select = "wood"
{
    if global.wood &gt;= 1
    {
        if (distance_to_point(par_gui.x,par_gui.y)&gt;=16)
        {
            if(ctrl_grid.grid[x div 64, y div 64] == eStatus.EMPTY){
               instance_create(x,y,obj_wood_block) //Create a block at the cursor position
               instance_create(x+64,y,obj_hammer) //Create a hammer at the cursor position
               
               ctrl_grid.grid[x/64, y/64] = eStatus.WOOD;
               
               with(instance_place(x, y-1, obj_wood_block)){
                  event_user(0);
               }
               with(instance_place(x+ctrl_grid.cell_width, y, obj_wood_block)){
                  event_user(0);
               }
               with(instance_place(x, y+ctrl_grid.cell_height, obj_wood_block)){
                  event_user(0);
               }
               with(instance_place(x-1, y, obj_wood_block)){
                  event_user(0);
               }
               global.wood -= 1;
            } else { 
               show_message("Can't place block there!");
            }
        }
    }
}

if global.select = "destroy"
{
    with(instance_place(x,y,obj_wood_block)){
       ctrl_grid.grid[other.x/64, other.y/64] = eStatus.EMPTY; // Set the cell to empty in the grid
       instance_destroy();  //We will delete the block that is placed under the cursor box
       global.wood += 1;
    }
    
    
    // Update neigbours
    with(instance_place(x, y-1, obj_wood_block)){
       event_user(0);
    }
    with(instance_place(x+ctrl_grid.cell_width, y, obj_wood_block)){
       event_user(0);
    }
    with(instance_place(x, y+ctrl_grid.cell_height, obj_wood_block)){
       event_user(0);
    }
    with(instance_place(x-1, y, obj_wood_block)){
       event_user(0);
    }
    

}

}
else
{
    if place_free(x,y)
    {
        instance_create(x,y,obj_lumbermill);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
